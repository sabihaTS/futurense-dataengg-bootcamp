CUSTOMERS TABLE CREATION:
---------------------------
0: jdbc:hive2://> create table if not exists customers(cust_id int,last_name string,first_name string,age int,profession string)
. . . . . . . . > ROW FORMAT DELIMITED
. . . . . . . . > FIELDS TERMINATED BY ","
. . . . . . . . > LINES TERMINATED BY "\n"
. . . . . . . . > stored as textfile;

LOAD DATA FROM CUSTOMERS.TXT AND INSERT INTO CUSTOMERS TABLE
------------------------------------------------------------
0: jdbc:hive2://> LOAD DATA LOCAL INPATH '/home/sabi/futurense_hadoop-pyspark/labs/dataset/retail/customers.txt' OVERWRITE into table customers;


TRANSACTIONS TABLE CREATION:
---------------------------
0: jdbc:hive2://> create table if not exists Transactions(trans_id int,trans_date string,cust_id int,amount double,category string,desc string,city string,state string,pymt_mode string)
. . . . . . . . > comment "Transactions details"
. . . . . . . . > ROW FORMAT DELIMITED
. . . . . . . . > FIELDS TERMINATED BY ","
. . . . . . . . > LINES TERMINATED BY "\n"
. . . . . . . . > stored as textfile;
OK
No rows affected (0.35 seconds)

LOAD DATA FROM TRANSACTIONS.TXT AND INSERT INTO TRANSACTIONS TABLE
------------------------------------------------------------------
0: jdbc:hive2://> LOAD DATA LOCAL INPATH '/home/sabi/futurense_hadoop-pyspark/labs/dataset/retail/transactions.txt' OVERWRITE into table transactions;


1) No of transactions by customer
-----------------------------------
0: jdbc:hive2://> select c.cust_id,count(t.trans_id) from customers c join transactions t on c.cust_id=t.cust_id group by c.cust_id;

OK
+------------+------+
| c.cust_id  | _c1  |
+------------+------+
| 4000001    | 8    |
| 4000002    | 6    |
| 4000003    | 3    |
| 4000004    | 5    |
| 4000005    | 5    |
| 4000006    | 5    |
| 4000007    | 6    |
| 4000008    | 10   |
| 4000009    | 6    |
| 4000010    | 6    |
+------------+------+
10 rows selected (69.368 seconds)

2) Total transaction amount by customer
---------------------------------------
0: jdbc:hive2://> select c.cust_id,sum(t.amount) from customers c join transactions t 
							on c.cust_id=t.cust_id group by c.cust_id;

+------------+---------------------+
| c.cust_id  |         _c1         |
+------------+---------------------+
| 4000001    | 651.05              |
| 4000002    | 706.97              |
| 4000003    | 527.5899999999999   |
| 4000004    | 337.06              |
| 4000005    | 325.15              |
| 4000006    | 539.38              |
| 4000007    | 699.5500000000001   |
| 4000008    | 859.42              |
| 4000009    | 457.83              |
| 4000010    | 447.09000000000003  |
+------------+---------------------+
10 rows selected (81.763 seconds)

3) Get top 3 customers by transaction amount
--------------------------------------------
0: jdbc:hive2://> select c.cust_id,t.amount from transactions t join customers c 
					on c.cust_id=t.cust_id order by t.amount desc limit 3;


+------------+-----------+
| c.cust_id  | t.amount  |
+------------+-----------+
| 4000002    | 198.44    |
| 4000003    | 198.19    |
| 4000002    | 194.86    |
+------------+-----------+
3 rows selected (80.261 seconds)


4) No of transactions by customer and mode of payment
------------------------------------------------------
0: jdbc:hive2://> select c.cust_id,count(t.trans_id),t.pymt_mode from customers c join transactions t 
 							on c.cust_id=t.cust_id group by c.cust_id,t.pymt_mode;

+------------+------+--------------+
| c.cust_id  | _c1  | t.pymt_mode  |
+------------+------+--------------+
| 4000001    | 1    | cash         |
| 4000001    | 7    | credit       |
| 4000002    | 1    | cash         |
| 4000002    | 5    | credit       |
| 4000003    | 3    | credit       |
| 4000004    | 4    | cash         |
| 4000004    | 1    | credit       |
| 4000005    | 1    | cash         |
| 4000005    | 4    | credit       |
| 4000006    | 5    | credit       |
| 4000007    | 6    | credit       |
| 4000008    | 10   | credit       |
| 4000009    | 6    | credit       |
| 4000010    | 6    | credit       |
+------------+------+--------------+
5) Get top 3 cities which has more transactions
------------------------------------------------
0: jdbc:hive2://> select city,count(trans_id) from transactions group by city order by count(trans_id) desc limit 3;

+-------------+------+
|    city     | _c1  |
+-------------+------+
| Honolulu    | 3    |
| Columbus    | 3    |
| Everett     | 2    |
+-------------+------+
3 rows selected (126.012 seconds)

6) Get month wise highest transaction
---------------------------------------
0: jdbc:hive2://> select month,count(month) from (select substr(trans_date,1,2) as month from transactions)x 
										group by month order by count(month) desc;

+--------+------+
| month  | _c1  |
+--------+------+
| 10     | 10   |
| 06     | 10   |
| 05     | 8    |
| 02     | 6    |
| 11     | 5    |
| 12     | 4    |
| 09     | 4    |
| 04     | 4    |
| 03     | 3    |
| 08     | 2    |
| 07     | 2    |
| 01     | 2    |
+--------+------+
12 rows selected (124.36 seconds)

7) Get sample transactions
----------------------------
select * from transactions limit 10;

+------------------------+--------------------------+-----------------------+----------------------+-------------------------+------------------------------------+--------------------+---------------------+-------------------------+
| transactions.trans_id  | transactions.trans_date  | transactions.cust_id  | transactions.amount  |  transactions.category  |         transactions.desc          | transactions.city  | transactions.state  | transactions.pymt_mode  |
+------------------------+--------------------------+-----------------------+----------------------+-------------------------+------------------------------------+--------------------+---------------------+-------------------------+
| 0                      | 06-26-2011               | 4000001               | 40.33                | Exercise & Fitness      | Cardio Machine Accessories         | Clarksville        | Tennessee           | credit                  |
| 1                      | 05-26-2011               | 4000002               | 198.44               | Exercise & Fitness      | Weightlifting Gloves               | Long Beach         | California          | credit                  |
| 2                      | 06-01-2011               | 4000002               | 5.58                 | Exercise & Fitness      | Weightlifting Machine Accessories  | Anaheim            | California          | credit                  |
| 3                      | 06-05-2011               | 4000003               | 198.19               | Gymnastics              | Gymnastics Rings                   | Milwaukee          | Wisconsin           | credit                  |
| 4                      | 12-17-2011               | 4000002               | 98.81                | Team Sports             | Field Hockey                       | Nashville          | Tennessee           | credit                  |
| 5                      | 02-14-2011               | 4000004               | 193.63               | Outdoor Recreation      | Camping & Backpacking & Hiking     | Chicago            | Illinois            | credit                  |
| 6                      | 10-28-2011               | 4000005               | 27.89                | Puzzles                 | Jigsaw Puzzles                     | Charleston         | South Carolina      | credit                  |
| 7                      | 07-14-2011               | 4000006               | 96.01                | Outdoor Play Equipment  | Sandboxes                          | Columbus           | Ohio                | credit                  |
| 8                      | 01-17-2011               | 4000006               | 10.44                | Winter Sports           | Snowmobiling                       | Des Moines         | Iowa                | credit                  |
| 9                      | 05-17-2011               | 4000006               | 152.46               | Jumping                 | Bungee Jumping                     | St. Petersburg     | Florida             | credit                  |
+------------------------+--------------------------+-----------------------+----------------------+-------------------------+------------------------------------+--------------------+---------------------+-------------------------+



